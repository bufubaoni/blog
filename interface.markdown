# 接口项目
项目需求：

1、发送数据，定时将数据查出并发送到对方接口

2、接收数据，接受对方数据并存入数据库中

3、扩展方便，实施人员可以方便的在不懂代码的情况下对发送数据段，和接收字段进行调整.

需求分析：

专门询问了客户的网络拓扑情况，但是也没有得到明确的回复，只是经理做了简单的介绍。经理希望将数据库的连接字符串配置到数据库中，这样可以前台添加或者修改，以此增强系统的可扩展性。

实现原理：

## 版本1：

当然经理告诉我谁开发谁制定接口，如果网络协议的话，想当然的选择了restful。

设计方案：

1、选用了web2py框架，框架本身提供了cron定时，提供restful的服务，提供了bootstrap静态文件，auth的权限模块

2、引入模板数据库，将发送的接口数据模块固定为数据表，将客户厂区作为查询条件，以此作为一个厂区一个数据模板

3、设置公司表，和数据库连接表，将信息输入前台，即可通过此信息生成数据库连接。

4、是用框架cron定时任务，定时发送数据

5、约定了调用格式，/<公司编号>/<路由方法>


## 版本2：

调用方只会使用xml协议，然后专门做了一个xml 的解析器，结果发现对方使用的soap协议。

1、将调用公司编号作为参数传入

2、更改了模板数据库的数据结构，以此避免对方频繁的更改数据接口，此时数据类型，转换方法未列出

|公司编号    | 发送数据列  | 对方数据列   |
|--------    |------------|-------------|
|1|mydata|interfacedata|
> 根据公司编号可查出发送列和对方的数据列的对应关系，使得在不对代码进行修改的情况下可以对己方发送数据列，和对方接口列进行修改。

3、接收方案也做出了相应的调整

## 版本3：

对方使用站点验证，

> * 1、 需要请求认证服务器，拿到认证信息
> * 2、 将认证信息夹带数据传入接口
> * 3、 由于站点受限，需要关闭数据接口

经常会对方服务器会负载过高宕机，导致拿不到认证信息，此时总会指责我方没有发送数据，

于是老老实实做异常处理，

### 1、发送数据无论成功与否都存入数据库

### 2、接收数据做同样处理

### 3、对常见错误做出调整

## 版本4：

> 定时发送间隔为10分钟，如果数据量过大，会出现重复发送，

1、 添加发送池，将需要发送的数据一起放入中间库

2、 查询，放入中间库，回写，做了拆分处理

3、 添加详细的log

## 最终：

添加了log 收集的系统，和后台队列同一入库。
认证服务作为装饰器认证后传入token，继而进行调用